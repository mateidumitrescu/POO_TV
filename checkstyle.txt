Starting audit...
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:12:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:16:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:16:26: Parameter users should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:22:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:26:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:26:27: Parameter movies should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:32:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:36:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:36:28: Parameter actions should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/checker/CheckStyleConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:10:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:14:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:14:25: Parameter name should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:18:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:22:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:22:29: Parameter password should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:26:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:30:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:30:32: Parameter accountType should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:34:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:38:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:38:28: Parameter country should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:42:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:46:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:46:28: Parameter balance should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:7:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:11:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:11:32: Parameter credentials should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Main.java:7:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Main.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Main.java:8:29: Parameter args should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:7:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:11:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:11:29: Parameter duration should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:15:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:19:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:19:27: Parameter rating should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:10:5: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:14:5: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:14:26: Parameter genre should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:18:5: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:22:5: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:22:27: Parameter actors should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:5:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:15:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:19:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:19:25: Parameter rate should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:29:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:33:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:33:26: Parameter movie should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:37:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:41:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:41:28: Parameter filters should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:45:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:49:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:49:26: Parameter count should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:55:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:59:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:59:31: Parameter startsWith should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:63:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:67:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:67:25: Parameter type should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:71:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:75:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:75:25: Parameter page should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:79:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:83:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:83:28: Parameter feature should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:87:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:91:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:91:32: Parameter credentials should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Filter.java:8:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Filter.java:12:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Filter.java:12:29: Parameter contains should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Filter.java:16:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Filter.java:20:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Filter.java:20:25: Parameter sort should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:12:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:16:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:16:25: Parameter name should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:20:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:24:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:24:25: Parameter year should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:28:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:32:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:32:29: Parameter duration should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:36:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:40:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:40:27: Parameter genres should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:44:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:48:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:48:27: Parameter actors should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:52:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:56:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:56:36: Parameter countriesBanned should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:3:8: Unused import - users.User. [UnusedImports]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:5:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:7:1: Class Application should be declared as final. [FinalClass]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:11:27: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:11:28: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/pages/RegisterPage.java:3:39: '{' is not preceded with whitespace. [WhitespaceAround]
Audit done.
Checkstyle ends with 104 errors.
