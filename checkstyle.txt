Starting audit...
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/checker/CheckStyleConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:27:40: '15' is a magic number. [MagicNumber]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Main.java:11:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Main.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Main.java:12:29: Parameter args should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:7:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:11:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:15:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:19:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:10:5: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:14:5: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:14:26: Parameter genre should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:18:5: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:22:5: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:22:27: Parameter actors should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:7:8: Unused import - pages.LoginPage. [UnusedImports]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:24:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:34:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:38:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:42:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:46:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:52:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:56:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:60:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:60:25: Parameter type should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:64:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:68:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:68:25: Parameter page should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:72:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:76:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:76:28: Parameter feature should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:80:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:84:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:105:20: 'movie' hides a field. [HiddenField]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:129: Line is longer than 100 characters (found 135). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:130:61: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:136: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:199:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:202:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:239:36: Parameter o1 should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:239:46: Parameter o2 should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:254:36: Parameter o1 should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:254:46: Parameter o2 should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:273: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:280:65: '&&' should be on a new line. [OperatorWrap]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:300:20: 'movie' hides a field. [HiddenField]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:312:49: 'movie' hides a field. [HiddenField]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:324:20: 'movie' hides a field. [HiddenField]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:345:20: 'movie' hides a field. [HiddenField]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:369: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:393:13: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:400: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:406: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:409: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:421:74: '&&' should be on a new line. [OperatorWrap]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:435: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:442: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:445: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:452: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:454: Line is longer than 100 characters (found 154). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:456: Line is longer than 100 characters (found 155). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:459: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:464: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:475: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:479: Line is longer than 100 characters (found 137). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:484: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:485: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:488:42: '5' is a magic number. [MagicNumber]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:498: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:510:46: '10' is a magic number. [MagicNumber]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:514: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:515:79: '10' is a magic number. [MagicNumber]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:526:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Filter.java:8:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Filter.java:13:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:18:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getRatingsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getRatingsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:24:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:28:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'increaseNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'increaseNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:65:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:69:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:69:27: Parameter rating should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:73:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:77:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:81:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:85:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:89:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:93:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:97:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:101:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:105:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:109:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:113:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:117:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:121:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:125:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:7:13: Using the '.*' form of import should be avoided - pages.*. [AvoidStarImport]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:12:1: Class Application should be declared as final. [FinalClass]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:24:28: Parameter actions should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:32:39: Parameter currentPage should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:40:26: Parameter users should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:48:27: Parameter movies should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:60:32: Parameter currentUser should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:75:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:131:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:142:57: 'instance' hides a field. [HiddenField]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:163:13: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/errors/OutputHandler.java:102: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/errors/OutputHandler.java:145: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/errors/OutputHandler.java:170:36: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/pages/Page.java:11:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getAvailablePages' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getAvailablePages' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/pages/Page.java:19:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getAvailableEvents' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getAvailableEvents' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/pages/HomePageAuth.java:3:8: Unused import - java.util.ArrayList. [UnusedImports]
Audit done.
Checkstyle ends with 115 errors.
