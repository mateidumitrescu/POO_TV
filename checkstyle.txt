Starting audit...
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:12:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:16:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:16:26: Parameter users should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:22:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:26:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:26:27: Parameter movies should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:32:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:36:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/input/Input.java:36:28: Parameter actions should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/checker/CheckStyleConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:11:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:15:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:15:25: Parameter name should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:19:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:23:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:23:29: Parameter password should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:27:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:31:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:31:32: Parameter accountType should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:35:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:39:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:39:28: Parameter country should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:43:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:47:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/Credentials.java:47:28: Parameter balance should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:11:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:15:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:15:32: Parameter credentials should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:19:40: '15' is a magic number. [MagicNumber]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:31:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getTokensCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getTokensCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:35:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setTokensCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setTokensCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:35:32: Parameter tokensCount should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:39:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:43:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:43:41: Parameter numFreePremiumMovies should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:47:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:51:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:51:36: Parameter purchasedMovies should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:55:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:59:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:59:34: Parameter watchedMovies should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:63:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:67:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:67:32: Parameter likedMovies should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:71:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:75:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/users/User.java:75:32: Parameter ratedMovies should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Main.java:1:8: Unused import - actions.Action. [UnusedImports]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Main.java:11:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Main.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/Main.java:12:29: Parameter args should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:7:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:11:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:11:29: Parameter duration should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:15:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:19:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Sort.java:19:27: Parameter rating should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:10:5: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:14:5: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:14:26: Parameter genre should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:18:5: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:22:5: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Contain.java:22:27: Parameter actors should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:6:8: Unused import - movies.Movie. [UnusedImports]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:7:8: Unused import - pages.LoginPage. [UnusedImports]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:12:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:22:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:26:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:26:25: Parameter rate should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:36:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:40:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:40:26: Parameter movie should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:44:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:48:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:48:28: Parameter filters should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:52:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:56:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:56:26: Parameter count should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:62:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:66:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:66:31: Parameter startsWith should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:70:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:74:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:74:25: Parameter type should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:78:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:82:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:82:25: Parameter page should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:86:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:90:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:90:28: Parameter feature should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:94:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:98:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:98:32: Parameter credentials should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:102:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setNewUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setNewUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:102:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:108:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'changePage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'changePage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:108:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:108:28: Parameter output should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:108:46: Parameter application should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:121:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'onPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'onPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:121:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:121:24: Parameter output should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:121:42: Parameter application should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:127:13: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:134: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:142: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:154:74: '&&' should be on a new line. [OperatorWrap]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:178:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:178:35: Parameter page should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:179:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:183: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Action.java:186: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Filter.java:8:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Filter.java:12:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Filter.java:12:29: Parameter contains should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Filter.java:16:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Filter.java:20:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/actions/Filter.java:20:25: Parameter sort should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:18:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:22:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:22:29: Parameter numLikes should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:26:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:30:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:30:27: Parameter rating should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:34:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:38:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:38:31: Parameter numRatings should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:42:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:46:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:46:25: Parameter name should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:50:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:54:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:54:25: Parameter year should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:58:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:62:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:62:29: Parameter duration should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:66:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:70:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:70:27: Parameter genres should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:74:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:78:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:78:27: Parameter actors should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:82:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:86:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/movies/Movie.java:86:36: Parameter countriesBanned should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:7:13: Using the '.*' form of import should be avoided - pages.*. [AvoidStarImport]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:12:1: Class Application should be declared as final. [FinalClass]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:24:28: Parameter actions should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:32:39: Parameter currentPage should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:40:26: Parameter users should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:48:27: Parameter movies should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:60:32: Parameter currentUser should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:75:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:75:25: Parameter user should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:85:33: Parameter userLoggedIn should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:93:35: Parameter homePageUnauth should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:101:33: Parameter homePageAuth should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:109:30: Parameter loginPage should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:117:31: Parameter logoutPage should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:125:31: Parameter moviesPage should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:133:33: Parameter registerPage should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:141:35: Parameter seeDetailsPage should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:149:33: Parameter upgradesPage should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:153:25: Parameter inputData should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:167:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:167:43: Parameter inputData should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:178:39: Parameter instance should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:178:51: 'instance' hides a field. [HiddenField]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:182:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:182:30: Parameter output should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/application/Application.java:188:13: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/errors/OutputHandler.java:15:5: Class 'OutputHandler' looks like designed for extension (can be subclassed), but the method 'standardError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputHandler' final or making the method 'standardError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/errors/OutputHandler.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/errors/OutputHandler.java:24:5: Class 'OutputHandler' looks like designed for extension (can be subclassed), but the method 'createMovieNodes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputHandler' final or making the method 'createMovieNodes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/errors/OutputHandler.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/errors/OutputHandler.java:24:34: Parameter objectNode should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/errors/OutputHandler.java:24:57: Parameter message should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/errors/OutputHandler.java:24:73: Parameter movies should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/errors/OutputHandler.java:50:5: Class 'OutputHandler' looks like designed for extension (can be subclassed), but the method 'userOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputHandler' final or making the method 'userOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/errors/OutputHandler.java:50:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/errors/OutputHandler.java:50:34: Parameter page should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/errors/OutputHandler.java:50:47: Parameter user should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/pages/Page.java:6:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setAvailablePages' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setAvailablePages' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/pages/Page.java:6:35: Parameter availablePages should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/pages/Page.java:10:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setAvailableEvents' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setAvailableEvents' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/pages/Page.java:10:36: Parameter availableEvents should be final. [FinalParameters]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/pages/Page.java:18:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getAvailablePages' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getAvailablePages' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/pages/Page.java:26:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getAvailableEvents' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getAvailableEvents' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /Users/mateidumitrescu/Documents/Facultate/Anul II/OOP/teme/proiect1_git/./src/pages/HomePageAuth.java:3:8: Unused import - java.util.ArrayList. [UnusedImports]
Audit done.
Checkstyle ends with 191 errors.
